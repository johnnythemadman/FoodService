@model FoodService.DTO.DashboardModel

@{
    ViewData["Title"] = "Dashboard";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<h2>Dashboard</h2>

<table class="table" id="OrderTable">
    <thead>
        <tr>
            <th scope="col">Customer</th>
            <th scope="col">Employee</th>
            <th scope="col">Payment</th>
            <th scope="col">Status</th>
            <th scope="col">Timestamp</th>
            <th scope="col">Total price</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var order in Model.Orders)
        {
            <tr>
                <td>@String.Join(", ", order.CustomerIdRefNavigation.FirstName, order.CustomerIdRefNavigation.LastName)</td>
                <td>@String.Join(", ", order.EmployeeRefNavigation.FirstName, order.EmployeeRefNavigation.LastName)</td>
                <td>@order.PaymentIdRefNavigation.Code</td>
                <td>@order.Status</td>
                <td>@order.Timestamp.ToString()</td>
                @{
                    var orderItems = Model.OrderItems.Where(x => x.OrderId == order.OrderId);
                    decimal sum = 0;
                    foreach (var item in orderItems)
                    {
                        var foodItem = Model.FoodItems.FirstOrDefault(x => x.FoodItemId == item.FoodItemIdRef);
                        sum += item.Quantity * foodItem.UnitPrice;
                    }
                }
                <td>@sum</td>
            </tr>
        }
    </tbody>
</table>

<div>
    <h2>AddNewOrder</h2>

    <h4>Order</h4>
    <hr />
    <div class="row">
        <div class="col-md-4">
            @using (Html.BeginForm("AddNewOrder", "Home", null, FormMethod.Post, false, htmlAttributes: new {@id = "AddNewOrderForm"}))
            {
                <div class="form-group">
                    @Html.LabelFor(x => x.CreateOrderModel.CustomerSelected) <br />
                    @Html.DropDownListFor(x => x.CreateOrderModel.CustomerSelected, Model.CreateOrderModel.Customers, null, new
                    {
                        @class = "form-control"
                    })

                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.CreateOrderModel.EmployeeSelected)
                    <br />
                    @Html.DropDownListFor(x => x.CreateOrderModel.EmployeeSelected, Model.CreateOrderModel.Employees, null, new
                    {
                        @class = "form-control"
                    })

                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.CreateOrderModel.PaymentSelected)
                    <br />
                    @Html.DropDownListFor(x => x.CreateOrderModel.PaymentSelected, Model.CreateOrderModel.Payments, null, new
                    {
                        @class = "form-control"
                    })
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.CreateOrderModel.FoodItemsSelected)
                    <br />
                    @Html.ListBoxFor(x => x.CreateOrderModel.FoodItemsSelected, Model.CreateOrderModel.FoodItems, new
                    {
                        @class = "form-control"
                    })
                </div>

                <input type="submit" name="SaveButton" value="Save" id="SaveButton" class="btn btn-primary" />

            }
        </div>
    </div>

    <div>
        <button id="TestButton">Click!</button>
    </div>
    

</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script type="text/javascript">
        $(document).ready(function() {
            @*$("#TestButton").click(function() {
                alert("click...");
                $.ajax({
                    url: '@Url.Action("TestMethod", "Home")',
                    type: 'POST',
                    dataType: 'json',
                    data: {
                        input: "hello!"
                    },
                    success: function(data) {
                        console.log(data);
                        alert(data);
                    }
                });
            });*@

            $("#SaveButton").click(function(event) {
                event.preventDefault();
                alert("Clicked save button...");
                var form = document.getElementById("AddNewOrderForm");
                console.log(form);
                var formData = new FormData(form);
                console.log(formData);
                for (var pair of formData.entries()) {
                    console.log(pair[0]+ ', ' + pair[1]); 
                }
                $.ajax({
                    url: '@Url.Action("AddNewOrder", "Home")',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (data)
                    {
                        console.log(data);
                        alert("SUCCESS!" + data);
                        if (data.status === "OK") {
                            $("#OrderTable").append(data.toAppend);
                        }
                    }
                });
            });
        })
    </script>
}